import React, { useState } from 'react';
import { useLanguage } from '../contexts/LanguageContext';
import { Shuffle, Heart, Share2, Copy, ChevronLeft, ChevronRight } from 'lucide-react';

const JokeZone = () => {
  const { language } = useLanguage();
  const [activeSection, setActiveSection] = useState('kids');
  const [currentJoke, setCurrentJoke] = useState(0);
  const [likedJokes, setLikedJokes] = useState<Record<string, Set<number>>>({
    kids: new Set(),
    dad: new Set(),
    bangla: new Set(),
    ai: new Set(),
    professional: new Set(),
    dark: new Set(),
    animal: new Set(),
    school: new Set()
  });

  const jokeSections = [
    { id: 'kids', name: language === 'bn' ? 'ржмрж╛ржЪрзНржЪрж╛ржжрзЗрж░ ржЬрзЛржХрж╕' : 'Kids Jokes', icon: 'ЁЯС╢', color: 'bg-yellow-400' },
    { id: 'dad', name: language === 'bn' ? 'ржмрж╛ржмрж╛ржжрзЗрж░ ржЬрзЛржХрж╕' : 'Dad Jokes', icon: 'ЁЯСи', color: 'bg-blue-400' },
    { id: 'bangla', name: language === 'bn' ? 'ржмрж╛ржВрж▓рж╛ рж╣рж╛рж╕рж┐рж░ ржЧрж▓рзНржк' : 'Bangla Hasir Golpo', icon: 'ЁЯЗзЁЯЗй', color: 'bg-green-400' },
    { id: 'professional', name: language === 'bn' ? 'ржкрзЗрж╢рж╛ржжрж╛рж░ ржЬрзЛржХрж╕' : 'Professional Jokes', icon: 'ЁЯТ╝', color: 'bg-indigo-400' },
    { id: 'dark', name: language === 'bn' ? 'ржбрж╛рж░рзНржХ рж╣рж┐ржЙржорж╛рж░' : 'Dark Humor', icon: 'ЁЯМС', color: 'bg-gray-600' },
    { id: 'animal', name: language === 'bn' ? 'ржкрзНрж░рж╛ржгрзАржжрзЗрж░ ржЬрзЛржХрж╕' : 'Animal Jokes', icon: 'ЁЯР╢', color: 'bg-orange-400' },
    { id: 'school', name: language === 'bn' ? 'рж╕рзНржХрзБрж▓ ржЬрзЛржХрж╕' : 'School Jokes', icon: 'ЁЯПл', color: 'bg-purple-400' },
    { id: 'ai', name: language === 'bn' ? 'ржПржЖржЗ ржЬрзЛржХ ржЬрзЗржирж╛рж░рзЗржЯрж░' : 'AI Joke Generator', icon: 'ЁЯдЦ', color: 'bg-pink-400' }
  ];

  const jokes = {
    kids: [
      {
        en: "Why don't scientists trust atoms? Because they make up everything!",
        bn: "ржХрзЗржи ржмрж┐ржЬрзНржЮрж╛ржирзАрж░рж╛ ржкрж░ржорж╛ржгрзБрж░ ржЙржкрж░ ржнрж░рж╕рж╛ ржХрж░рзЗржи ржирж╛? ржХрж╛рж░ржг рждрж╛рж░рж╛ рж╕ржмржХрж┐ржЫрзБ ржмрж╛ржирж┐ржпрж╝рзЗ ржмрж▓рзЗ!"
      },
      {
        en: "What do you call a sleeping bull? A bulldozer!",
        bn: "ржШрзБржорж┐ржпрж╝рзЗ ржерж╛ржХрж╛ рж╖рж╛ржБржбрж╝ржХрзЗ ржХрзА ржмрж▓рзЗ? ржмрзБрж▓ржбрзЛржЬрж╛рж░!"
      },
      {
        en: "Why did the math book look so sad? Because it had too many problems!",
        bn: "ржЧржгрж┐рждрзЗрж░ ржмржЗржЯрж┐ ржХрзЗржи ржПржд ржжрзБржГржЦрж┐ржд ржжрзЗржЦрж╛ржЪрзНржЫрж┐рж▓? ржХрж╛рж░ржг ржПрждрзЗ ржЕржирзЗржХ рж╕ржорж╕рзНржпрж╛ ржЫрж┐рж▓!"
      },
      {
        en: "What do you call a fake noodle? An impasta!",
        bn: "ржиржХрж▓ ржирзБржбрж▓ржХрзЗ ржХрзА ржмрж▓рзЗ? ржЗржорзНржкрж╛рж╕рзНрждрж╛!"
      },
      {
        en: "How do you make a tissue dance? Put a little boogie in it!",
        bn: "ржЯрж┐рж╕рзНржпрзБржХрзЗ ржХрзАржнрж╛ржмрзЗ ржирж╛ржЪрж╛ржирзЛ ржпрж╛ржпрж╝? ржПрж░ ржоржзрзНржпрзЗ ржПржХржЯрзБ ржмрзБржЧрж┐ ржжрж┐ржи!"
      },
      {
        en: "Why did the scarecrow win an award? Because he was outstanding in his field!",
        bn: "рж╕рзНржХрзЗржпрж╝рж╛рж░ржХрзНрж░рзЛ ржХрзЗржи ржкрзБрж░рж╕рзНржХрж╛рж░ ржкрзЗрж▓? ржХрж╛рж░ржг рж╕рзЗ рждрж╛рж░ ржХрзНрж╖рзЗрждрзНрж░рзЗ ржЕрж╕рж╛ржзрж╛рж░ржг ржЫрж┐рж▓!"
      },
      {
        en: "What do you call cheese that isn't yours? Nacho cheese!",
        bn: "ржЖржкржирж╛рж░ ржиржпрж╝ ржПржоржи ржкржирж┐рж░ржХрзЗ ржХрзА ржмрж▓рзЗ? ржирж╛ржЪрзЛ ржкржирж┐рж░!"
      },
      {
        en: "Why can't you explain puns to kleptomaniacs? They always take things literally.",
        bn: "ржХрзНрж▓рзЗржкрзНржЯрзЛржорзНржпрж╛ржирж┐ржпрж╝рж╛ржХржжрзЗрж░ ржХрзЗржи ржкрзБржи ржмрзНржпрж╛ржЦрзНржпрж╛ ржХрж░рж╛ ржпрж╛ржпрж╝ ржирж╛? рждрж╛рж░рж╛ рж╕ржмржХрж┐ржЫрзБ ржЖржХрзНрж╖рж░рж┐ржХ ржЕрж░рзНржерзЗ ржирзЗржпрж╝ред"
      }
    ],
    dad: [
      {
        en: "I'm reading a book about anti-gravity. It's impossible to put down!",
        bn: "ржЖржорж┐ ржорж╛ржзрзНржпрж╛ржХрж░рзНрж╖ржг ржмрж┐рж░рзЛржзрзА ржПржХржЯрж┐ ржмржЗ ржкржбрж╝ржЫрж┐ред ржПржЯрж╛ ржирж╛ржорж╛ржирзЛ ржЕрж╕ржорзНржнржм!"
      },
      {
        en: "Why don't eggs tell jokes? They'd crack each other up!",
        bn: "ржбрж┐ржо ржХрзЗржи ржЬрзЛржХрж╕ ржмрж▓рзЗ ржирж╛? рждрж╛рж░рж╛ ржПржХрзЗ ржЕржкрж░ржХрзЗ ржлрж╛ржЯрж┐ржпрж╝рзЗ ржжрзЗржмрзЗ!"
      },
      {
        en: "I used to hate facial hair, but then it grew on me.",
        bn: "ржЖржорж┐ ржЖржЧрзЗ ржорзБржЦрзЗрж░ ржЪрзБрж▓ ржЕржкржЫржирзНржж ржХрж░рждрж╛ржо, ржХрж┐ржирзНрждрзБ ржкрж░рзЗ ржПржЯрж╛ ржЖржорж╛рж░ ржЙржкрж░ ржЧржЬрж┐ржпрж╝рзЗ ржЧрзЗрж▓ред"
      },
      {
        en: "Did you hear about the claustrophobic astronaut? He just needed a little space.",
        bn: "ржХрзНрж▓рж╕рзНржЯрзНрж░рзЛржлрзЛржмрж┐ржХ ржиржнрзЛржЪрж╛рж░рзА рж╕ржорзНржкрж░рзНржХрзЗ рж╢рзБржирзЗржЫрзЗржи? рж╕рзЗ рж╢рзБржзрзБ ржПржХржЯрзБ ржЬрж╛ржпрж╝ржЧрж╛ ржЪрзЗржпрж╝рзЗржЫрж┐рж▓ред"
      },
      {
        en: "Why don't skeletons fight each other? They don't have the guts.",
        bn: "ржХржЩрзНржХрж╛рж▓рж░рж╛ ржХрзЗржи ржПржХрзЗ ржЕржкрж░рзЗрж░ рж╕рж╛ржерзЗ рж▓ржбрж╝рж╛ржЗ ржХрж░рзЗ ржирж╛? рждрж╛ржжрзЗрж░ рж╕рж╛рж╣рж╕ ржирзЗржЗред"
      },
      {
        en: "What did the janitor say when he jumped out of the closet? Supplies!",
        bn: "ржХрзЛрж╖рж╛ржзрзНржпржХрзНрж╖ ржХрж┐ ржмрж▓рж▓ ржпржЦржи рж╕рзЗ ржЖрж▓ржорж╛рж░рж┐ ржерзЗржХрзЗ рж▓рж╛ржл ржжрж┐рж▓? рж╕рж░ржЮрзНржЬрж╛ржо!"
      },
      {
        en: "Have you heard about the new restaurant called Karma? There's no menu: You get what you deserve.",
        bn: "ржЖржкржирж┐ ржХрж┐ ржХрж░рзНржорж╛ ржирж╛ржорзЗ ржирждрзБржи рж░рзЗрж╕рзНрждрзЛрж░рж╛ржБржЯрж┐ рж╕ржорзНржкрж░рзНржХрзЗ рж╢рзБржирзЗржЫрзЗржи? ржПржЦрж╛ржирзЗ ржХрзЛржи ржорзЗржирзБ ржирзЗржЗ: ржЖржкржирж┐ ржпрж╛ ржкрзНрж░рж╛ржкрзНржп рждрж╛ржЗ ржкрж╛ржмрзЗржиред"
      }
    ],
    bangla: [
      {
        en: "ржПржХржмрж╛рж░ ржПржХ рж▓рзЛржХ ржжрзЛржХрж╛ржирзЗ ржЧрзЗрж▓ред ржжрзЛржХрж╛ржиржжрж╛рж░ ржЬрж┐ржЬрзНржЮрзЗрж╕ ржХрж░рж▓, 'ржХрзА ржЪрж╛ржи?' рж▓рзЛржХржЯрж┐ ржмрж▓рж▓, 'ржЖржорж┐ ржХрж┐ржЫрзБ ржЪрж╛ржЗ ржирж╛, рж╢рзБржзрзБ ржжрзЗржЦрждрзЗ ржПрж╕рзЗржЫрж┐ред' ржжрзЛржХрж╛ржиржжрж╛рж░ ржмрж▓рж▓, 'рждрж╛рж╣рж▓рзЗ ржЖржпрж╝ржирж╛ ржХрж┐ржирзЗ ржирж┐ржи!'",
        bn: "ржПржХржмрж╛рж░ ржПржХ рж▓рзЛржХ ржжрзЛржХрж╛ржирзЗ ржЧрзЗрж▓ред ржжрзЛржХрж╛ржиржжрж╛рж░ ржЬрж┐ржЬрзНржЮрзЗрж╕ ржХрж░рж▓, 'ржХрзА ржЪрж╛ржи?' рж▓рзЛржХржЯрж┐ ржмрж▓рж▓, 'ржЖржорж┐ ржХрж┐ржЫрзБ ржЪрж╛ржЗ ржирж╛, рж╢рзБржзрзБ ржжрзЗржЦрждрзЗ ржПрж╕рзЗржЫрж┐ред' ржжрзЛржХрж╛ржиржжрж╛рж░ ржмрж▓рж▓, 'рждрж╛рж╣рж▓рзЗ ржЖржпрж╝ржирж╛ ржХрж┐ржирзЗ ржирж┐ржи!'"
      },
      {
        en: "ржЫрзЗрж▓рзЗ: ржорж╛, ржЖржорж┐ ржХрзА ржЦрж╛ржм? ржорж╛: ржпрж╛ ржЖржЫрзЗ ржЦрж╛ржУред ржЫрзЗрж▓рзЗ: ржХрж┐ржирзНрждрзБ ржХрж┐ржЫрзБржЗ рждрзЛ ржирзЗржЗред ржорж╛: рждрж╛рж╣рж▓рзЗ ржХрж┐ржЫрзБржЗ ржЦрж╛ржУ!",
        bn: "ржЫрзЗрж▓рзЗ: ржорж╛, ржЖржорж┐ ржХрзА ржЦрж╛ржм? ржорж╛: ржпрж╛ ржЖржЫрзЗ ржЦрж╛ржУред ржЫрзЗрж▓рзЗ: ржХрж┐ржирзНрждрзБ ржХрж┐ржЫрзБржЗ рждрзЛ ржирзЗржЗред ржорж╛: рждрж╛рж╣рж▓рзЗ ржХрж┐ржЫрзБржЗ ржЦрж╛ржУ!"
      },
      {
        en: "ржПржХ рж▓рзЛржХрзЗрж░ ржЦрзБржм ржЧрж░рзНржм ржЫрж┐рж▓ ржпрзЗ рж╕рзЗ ржХржЦржиржУ ржорж┐ржерзНржпрж╛ ржмрж▓рзЗ ржирж╛ред ржПржХржжрж┐ржи рж╕рзЗ ржмрж▓рж▓, 'ржЖржорж┐ ржХржЦржиржУ ржорж┐ржерзНржпрж╛ ржмрж▓рж┐ ржирж╛ред' рж╕ржЩрзНржЧрзЗ рж╕ржЩрзНржЧрзЗ рждрж╛рж░ ржирж╛ржХ ржПржХ ржЗржЮрзНржЪрж┐ ржмржбрж╝ рж╣ржпрж╝рзЗ ржЧрзЗрж▓!",
        bn: "ржПржХ рж▓рзЛржХрзЗрж░ ржЦрзБржм ржЧрж░рзНржм ржЫрж┐рж▓ ржпрзЗ рж╕рзЗ ржХржЦржиржУ ржорж┐ржерзНржпрж╛ ржмрж▓рзЗ ржирж╛ред ржПржХржжрж┐ржи рж╕рзЗ ржмрж▓рж▓, 'ржЖржорж┐ ржХржЦржиржУ ржорж┐ржерзНржпрж╛ ржмрж▓рж┐ ржирж╛ред' рж╕ржЩрзНржЧрзЗ рж╕ржЩрзНржЧрзЗ рждрж╛рж░ ржирж╛ржХ ржПржХ ржЗржЮрзНржЪрж┐ ржмржбрж╝ рж╣ржпрж╝рзЗ ржЧрзЗрж▓!"
      },
      {
        en: "ржПржХ ржЫрзЗрж▓рзЗ ржмрж╛ржмрж╛рж░ ржХрж╛ржЫрзЗ ржПрж╕рзЗ ржмрж▓рж▓, 'ржмрж╛ржмрж╛, ржЖржорж╛ржжрзЗрж░ рж╕рзНржХрзБрж▓рзЗ ржЖржЬ ржПржХржЯрж╛ ржмржбрж╝ рж╕рж╛ржк ржПрж╕рзЗржЫрж┐рж▓!' ржмрж╛ржмрж╛ ржмрж▓рж▓рзЗржи, 'рж╕рждрзНржпрж┐?' ржЫрзЗрж▓рзЗ ржмрж▓рж▓, 'ржирж╛, ржЖржЬ ржЫрж┐рж▓ рж╕рж╛ржкрзЗрж░ ржжрж┐ржи!'",
        bn: "ржПржХ ржЫрзЗрж▓рзЗ ржмрж╛ржмрж╛рж░ ржХрж╛ржЫрзЗ ржПрж╕рзЗ ржмрж▓рж▓, 'ржмрж╛ржмрж╛, ржЖржорж╛ржжрзЗрж░ рж╕рзНржХрзБрж▓рзЗ ржЖржЬ ржПржХржЯрж╛ ржмржбрж╝ рж╕рж╛ржк ржПрж╕рзЗржЫрж┐рж▓!' ржмрж╛ржмрж╛ ржмрж▓рж▓рзЗржи, 'рж╕рждрзНржпрж┐?' ржЫрзЗрж▓рзЗ ржмрж▓рж▓, 'ржирж╛, ржЖржЬ ржЫрж┐рж▓ рж╕рж╛ржкрзЗрж░ ржжрж┐ржи!'"
      },
      {
        en: "ржПржХ рж▓рзЛржХ рж░рзЗрж╕рзНржЯрзБрж░рзЗржирзНржЯрзЗ ржЧрж┐ржпрж╝рзЗ ржУржпрж╝рзЗржЯрж╛рж░ржХрзЗ ржЬрж┐ржЬрзНржЮрзЗрж╕ ржХрж░рж▓, 'ржЖржкржирж╛ржжрзЗрж░ ржПржЦрж╛ржирзЗ ржХрзА ржХрзА ржЖржЫрзЗ?' ржУржпрж╝рзЗржЯрж╛рж░ ржмрж▓рж▓, 'рж╕рзНржпрж╛рж░, рж╕ржмржЗ ржЖржЫрзЗред' рж▓рзЛржХржЯрж┐ ржмрж▓рж▓, 'рждрж╛рж╣рж▓рзЗ ржПржХржЯрж╛ 'рж╕ржмржЗ' ржжрж┐ржпрж╝рзЗ ржжрж┐ржи!'",
        bn: "ржПржХ рж▓рзЛржХ рж░рзЗрж╕рзНржЯрзБрж░рзЗржирзНржЯрзЗ ржЧрж┐ржпрж╝рзЗ ржУржпрж╝рзЗржЯрж╛рж░ржХрзЗ ржЬрж┐ржЬрзНржЮрзЗрж╕ ржХрж░рж▓, 'ржЖржкржирж╛ржжрзЗрж░ ржПржЦрж╛ржирзЗ ржХрзА ржХрзА ржЖржЫрзЗ?' ржУржпрж╝рзЗржЯрж╛рж░ ржмрж▓рж▓, 'рж╕рзНржпрж╛рж░, рж╕ржмржЗ ржЖржЫрзЗред' рж▓рзЛржХржЯрж┐ ржмрж▓рж▓, 'рждрж╛рж╣рж▓рзЗ ржПржХржЯрж╛ 'рж╕ржмржЗ' ржжрж┐ржпрж╝рзЗ ржжрж┐ржи!'"
      },
      {
        en: "ржПржХ ржЫрж╛рждрзНрж░ ржкрж░рзАржХрзНрж╖рж╛ржпрж╝ рж▓рж┐ржЦрзЗржЫрзЗ: 'ржЖржорж┐ ржЬрж╛ржирж┐ ржирж╛'ред рж╢рж┐ржХрзНрж╖ржХ рж▓рж┐ржЦрзЗржЫрзЗржи: 'ржЖржорж┐ржУ ржЬрж╛ржирж┐ ржирж╛, рждрж╛ржЗ рждрзЛ рждрзЛржорж╛ржХрзЗ ржлрзЗрж▓ ржХрж░рж▓рж╛ржо!'",
        bn: "ржПржХ ржЫрж╛рждрзНрж░ ржкрж░рзАржХрзНрж╖рж╛ржпрж╝ рж▓рж┐ржЦрзЗржЫрзЗ: 'ржЖржорж┐ ржЬрж╛ржирж┐ ржирж╛'ред рж╢рж┐ржХрзНрж╖ржХ рж▓рж┐ржЦрзЗржЫрзЗржи: 'ржЖржорж┐ржУ ржЬрж╛ржирж┐ ржирж╛, рждрж╛ржЗ рждрзЛ рждрзЛржорж╛ржХрзЗ ржлрзЗрж▓ ржХрж░рж▓рж╛ржо!'"
      },
      {
        en: "ржПржХ рж▓рзЛржХ ржбрж╛ржХрзНрждрж╛рж░рзЗрж░ ржХрж╛ржЫрзЗ ржЧрж┐ржпрж╝рзЗ ржмрж▓рж▓, 'ржбрж╛ржХрзНрждрж╛рж░ рж╕рж╛рж╣рзЗржм, ржЖржорж┐ ржнрзБрж▓рзЗ ржпрж╛ржЗред' ржбрж╛ржХрзНрждрж╛рж░ ржмрж▓рж▓рзЗржи, 'ржХржЦржи ржерзЗржХрзЗ?' рж▓рзЛржХржЯрж┐ ржмрж▓рж▓, 'ржХрж┐ ржерзЗржХрзЗ?'",
        bn: "ржПржХ рж▓рзЛржХ ржбрж╛ржХрзНрждрж╛рж░рзЗрж░ ржХрж╛ржЫрзЗ ржЧрж┐ржпрж╝рзЗ ржмрж▓рж▓, 'ржбрж╛ржХрзНрждрж╛рж░ рж╕рж╛рж╣рзЗржм, ржЖржорж┐ ржнрзБрж▓рзЗ ржпрж╛ржЗред' ржбрж╛ржХрзНрждрж╛рж░ ржмрж▓рж▓рзЗржи, 'ржХржЦржи ржерзЗржХрзЗ?' рж▓рзЛржХржЯрж┐ ржмрж▓рж▓, 'ржХрж┐ ржерзЗржХрзЗ?'"
      },
      {
        en: "ржПржХ рж▓рзЛржХ ржЯрзНрж░рзЗржирзЗ ржЙржарзЗ ржжрзЗржЦрж▓ рж╕рж┐ржЯ ржЦрж╛рж▓рж┐ ржирзЗржЗред рж╕рзЗ ржПржХржЬржирзЗрж░ ржкрж╛рж╢рзЗ ржжрж╛ржБржбрж╝рж┐ржпрж╝рзЗ ржмрж▓рж▓, 'ржПржЗ рж╕рж┐ржЯржЯрж╛ ржХрж┐ ржЦрж╛рж▓рж┐?' рж▓рзЛржХржЯрж┐ ржмрж▓рж▓, 'рж╣рзНржпрж╛ржБ, ржмрж╕рзБржиред' ржкрзНрж░ржержо рж▓рзЛржХржЯрж┐ ржмрж╕рзЗ ржмрж▓рж▓, 'ржЖржорж┐ рждрзЛ ржнрж╛ржмржЫрж┐рж▓рж╛ржо рж╕рж┐ржЯрзЗ ржнрзВржд ржЖржЫрзЗ!'",
        bn: "ржПржХ рж▓рзЛржХ ржЯрзНрж░рзЗржирзЗ ржЙржарзЗ ржжрзЗржЦрж▓ рж╕рж┐ржЯ ржЦрж╛рж▓рж┐ ржирзЗржЗред рж╕рзЗ ржПржХржЬржирзЗрж░ ржкрж╛рж╢рзЗ ржжрж╛ржБржбрж╝рж┐ржпрж╝рзЗ ржмрж▓рж▓, 'ржПржЗ рж╕рж┐ржЯржЯрж╛ ржХрж┐ ржЦрж╛рж▓рж┐?' рж▓рзЛржХржЯрж┐ ржмрж▓рж▓, 'рж╣рзНржпрж╛ржБ, ржмрж╕рзБржиред' ржкрзНрж░ржержо рж▓рзЛржХржЯрж┐ ржмрж╕рзЗ ржмрж▓рж▓, 'ржЖржорж┐ рждрзЛ ржнрж╛ржмржЫрж┐рж▓рж╛ржо рж╕рж┐ржЯрзЗ ржнрзВржд ржЖржЫрзЗ!'"
      },
      {
        en: "ржПржХ рж▓рзЛржХрзЗрж░ ржмрж╛ржбрж╝рж┐рждрзЗ ржЪрзЛрж░ ржврзБржХрж▓ред рж▓рзЛржХржЯрж┐ ржЪрзЛрж░ржХрзЗ ржжрзЗржЦрзЗ ржмрж▓рж▓, 'ржЖржорж╛рж░ ржмрж╛ржбрж╝рж┐рждрзЗ рждрзЛ ржХрж┐ржЫрзБржЗ ржирзЗржЗ!' ржЪрзЛрж░ ржмрж▓рж▓, 'рждрж╛рж╣рж▓рзЗ ржЖржорж┐ ржХрж┐ ржХрж░ржм?' рж▓рзЛржХржЯрж┐ ржмрж▓рж▓, 'ржЖржорж╛рж░ рж╕рж╛ржерзЗ ржмрж╕рзЗ ржХрж╛ржБржжржм!'",
        bn: "ржПржХ рж▓рзЛржХрзЗрж░ ржмрж╛ржбрж╝рж┐рждрзЗ ржЪрзЛрж░ ржврзБржХрж▓ред рж▓рзЛржХржЯрж┐ ржЪрзЛрж░ржХрзЗ ржжрзЗржЦрзЗ ржмрж▓рж▓, 'ржЖржорж╛рж░ ржмрж╛ржбрж╝рж┐рждрзЗ рждрзЛ ржХрж┐ржЫрзБржЗ ржирзЗржЗ!' ржЪрзЛрж░ ржмрж▓рж▓, 'рждрж╛рж╣рж▓рзЗ ржЖржорж┐ ржХрж┐ ржХрж░ржм?' рж▓рзЛржХржЯрж┐ ржмрж▓рж▓, 'ржЖржорж╛рж░ рж╕рж╛ржерзЗ ржмрж╕рзЗ ржХрж╛ржБржжржм!'"
      },
      {
        en: "ржПржХ ржЫрзЗрж▓рзЗ ржмрж╛ржмрж╛рж░ ржХрж╛ржЫрзЗ ржПрж╕рзЗ ржмрж▓рж▓, 'ржмрж╛ржмрж╛, ржЖржорж┐ ржПржХржЯрж╛ ржЧрж╛ржбрж╝рж┐ ржЪрж╛ржЗ!' ржмрж╛ржмрж╛ ржмрж▓рж▓рзЗржи, 'ржжрзБржЗ рж╢рж░рзНрждрзЗред ржкрзНрж░ржержоржд, ржкрж░рзАржХрзНрж╖рж╛ржпрж╝ ржнрж╛рж▓рзЛ ржлрж▓ ржХрж░рждрзЗ рж╣ржмрзЗред ржжрзНржмрж┐рждрзАржпрж╝ржд, ржжрж╛ржбрж╝рж┐ ржЧржЬрж╛рждрзЗ рж╣ржмрзЗред' ржЫрзЗрж▓рзЗ ржмрж▓рж▓, 'ржХрж┐ржирзНрждрзБ ржмрж╛ржмрж╛, ржорзЗржпрж╝рзЗржжрзЗрж░ рждрзЛ ржжрж╛ржбрж╝рж┐ ржЧржЬрж╛ржпрж╝ ржирж╛!'",
        bn: "ржПржХ ржЫрзЗрж▓рзЗ ржмрж╛ржмрж╛рж░ ржХрж╛ржЫрзЗ ржПрж╕рзЗ ржмрж▓рж▓, 'ржмрж╛ржмрж╛, ржЖржорж┐ ржПржХржЯрж╛ ржЧрж╛ржбрж╝рж┐ ржЪрж╛ржЗ!' ржмрж╛ржмрж╛ ржмрж▓рж▓рзЗржи, 'ржжрзБржЗ рж╢рж░рзНрждрзЗред ржкрзНрж░ржержоржд, ржкрж░рзАржХрзНрж╖рж╛ржпрж╝ ржнрж╛рж▓рзЛ ржлрж▓ ржХрж░рждрзЗ рж╣ржмрзЗред ржжрзНржмрж┐рждрзАржпрж╝ржд, ржжрж╛ржбрж╝рж┐ ржЧржЬрж╛рждрзЗ рж╣ржмрзЗред' ржЫрзЗрж▓рзЗ ржмрж▓рж▓, 'ржХрж┐ржирзНрждрзБ ржмрж╛ржмрж╛, ржорзЗржпрж╝рзЗржжрзЗрж░ рждрзЛ ржжрж╛ржбрж╝рж┐ ржЧржЬрж╛ржпрж╝ ржирж╛!'"
      },
      {
        en: "ржПржХ рж▓рзЛржХ рждрж╛рж░ ржмржирзНржзрзБржХрзЗ ржмрж▓рж▓, 'ржЖржорж╛рж░ рж╕рзНрждрзНрж░рзА ржЖржорж╛ржХрзЗ ржмрж▓рзЗржЫрзЗ рж╕рзЗ ржЖржорж╛ржХрзЗ ржЫрзЗржбрж╝рзЗ ржЪрж▓рзЗ ржпрж╛ржмрзЗ ржпржжрж┐ ржЖржорж┐ ржоржж ржирж╛ ржЫрж╛ржбрж╝рж┐ред' ржмржирзНржзрзБ ржмрж▓рж▓, 'рждрж╛рж╣рж▓рзЗ рждрзЛ ржнрж╛рж▓рзЛ ржЦржмрж░!' рж▓рзЛржХржЯрж┐ ржмрж▓рж▓, 'ржирж╛, рж╕рзЗ ржЖржЬ рж╕ржХрж╛рж▓рзЗ ржЖржорж╛рж░ рж╕ржм ржоржж ржирж┐ржпрж╝рзЗ ржЪрж▓рзЗ ржЧрзЗржЫрзЗ!'",
        bn: "ржПржХ рж▓рзЛржХ рждрж╛рж░ ржмржирзНржзрзБржХрзЗ ржмрж▓рж▓, 'ржЖржорж╛рж░ рж╕рзНрждрзНрж░рзА ржЖржорж╛ржХрзЗ ржмрж▓рзЗржЫрзЗ рж╕рзЗ ржЖржорж╛ржХрзЗ ржЫрзЗржбрж╝рзЗ ржЪрж▓рзЗ ржпрж╛ржмрзЗ ржпржжрж┐ ржЖржорж┐ ржоржж ржирж╛ ржЫрж╛ржбрж╝рж┐ред' ржмржирзНржзрзБ ржмрж▓рж▓, 'рждрж╛рж╣рж▓рзЗ рждрзЛ ржнрж╛рж▓рзЛ ржЦржмрж░!' рж▓рзЛржХржЯрж┐ ржмрж▓рж▓, 'ржирж╛, рж╕рзЗ ржЖржЬ рж╕ржХрж╛рж▓рзЗ ржЖржорж╛рж░ рж╕ржм ржоржж ржирж┐ржпрж╝рзЗ ржЪрж▓рзЗ ржЧрзЗржЫрзЗ!'"
      },
      {
        en: "ржПржХ рж▓рзЛржХ ржмрж┐ржпрж╝рзЗ ржХрж░рзЗ ржирждрзБржи ржмржЙ ржирж┐ржпрж╝рзЗ ржмрж╛ржбрж╝рж┐ ржлрж┐рж░ржЫрзЗред ржкржерзЗ ржмржЙ ржЬрж┐ржЬрзНржЮрзЗрж╕ ржХрж░рж▓, 'ржЖржкржирж┐ ржХрж┐ ржЖржорж╛ржХрзЗ рж╕рждрзНржпрж┐ржЗ ржнрж╛рж▓рзЛржмрж╛рж╕рзЗржи?' рж▓рзЛржХржЯрж┐ ржмрж▓рж▓, 'ржЖржорж┐ ржХрж┐ рж╢ржкрже ржХрж░рзЗ ржмрж▓ржм?' ржмржЙ ржмрж▓рж▓, 'рж╣рзНржпрж╛ржБред' рж▓рзЛржХржЯрж┐ ржмрж▓рж▓, 'рждрж╛рж╣рж▓рзЗ ржЖрж▓рзНрж▓рж╛рж╣ржЗ рж╕рж╛ржХрзНрж╖рзА!' ржмржЙ ржмрж▓рж▓, 'ржЖржкржирж┐ рждрзЛ рж╣рж┐ржирзНржжрзБ!'",
        bn: "ржПржХ рж▓рзЛржХ ржмрж┐ржпрж╝рзЗ ржХрж░рзЗ ржирждрзБржи ржмржЙ ржирж┐ржпрж╝рзЗ ржмрж╛ржбрж╝рж┐ ржлрж┐рж░ржЫрзЗред ржкржерзЗ ржмржЙ ржЬрж┐ржЬрзНржЮрзЗрж╕ ржХрж░рж▓, 'ржЖржкржирж┐ ржХрж┐ ржЖржорж╛ржХрзЗ рж╕рждрзНржпрж┐ржЗ ржнрж╛рж▓рзЛржмрж╛рж╕рзЗржи?' рж▓рзЛржХржЯрж┐ ржмрж▓рж▓, 'ржЖржорж┐ ржХрж┐ рж╢ржкрже ржХрж░рзЗ ржмрж▓ржм?' ржмржЙ ржмрж▓рж▓, 'рж╣рзНржпрж╛ржБред' рж▓рзЛржХржЯрж┐ ржмрж▓рж▓, 'рждрж╛рж╣рж▓рзЗ ржЖрж▓рзНрж▓рж╛рж╣ржЗ рж╕рж╛ржХрзНрж╖рзА!' ржмржЙ ржмрж▓рж▓, 'ржЖржкржирж┐ рждрзЛ рж╣рж┐ржирзНржжрзБ!'"
      },
      {
        en: "ржПржХ рж▓рзЛржХ ржбрж╛ржХрзНрждрж╛рж░рзЗрж░ ржХрж╛ржЫрзЗ ржЧрж┐ржпрж╝рзЗ ржмрж▓рж▓, 'ржбрж╛ржХрзНрждрж╛рж░ рж╕рж╛рж╣рзЗржм, ржЖржорж┐ ржпржЦржи ржХржерж╛ ржмрж▓рж┐, рждржЦржи ржХрзЗржЙ рж╢рзБржирждрзЗ ржкрж╛ржпрж╝ ржирж╛ред' ржбрж╛ржХрзНрждрж╛рж░ ржмрж▓рж▓рзЗржи, 'ржкрж░рзЗрж░!'",
        bn: "ржПржХ рж▓рзЛржХ ржбрж╛ржХрзНрждрж╛рж░рзЗрж░ ржХрж╛ржЫрзЗ ржЧрж┐ржпрж╝рзЗ ржмрж▓рж▓, 'ржбрж╛ржХрзНрждрж╛рж░ рж╕рж╛рж╣рзЗржм, ржЖржорж┐ ржпржЦржи ржХржерж╛ ржмрж▓рж┐, рждржЦржи ржХрзЗржЙ рж╢рзБржирждрзЗ ржкрж╛ржпрж╝ ржирж╛ред' ржбрж╛ржХрзНрждрж╛рж░ ржмрж▓рж▓рзЗржи, 'ржкрж░рзЗрж░!'"
      },
      {
        en: "ржПржХ рж▓рзЛржХрзЗрж░ ржЦрзБржм ржШрзБржо ржкрж╛ржЪрзНржЫрж┐рж▓ред рж╕рзЗ ржмрж┐ржЫрж╛ржирж╛ржпрж╝ рж╢рзБржпрж╝рзЗ ржмрж▓рж▓, 'рж╣рзЗ ржЖрж▓рзНрж▓рж╛рж╣, ржЖржорж╛ржХрзЗ ржШрзБржо ржкрж╛ржбрж╝рж┐ржпрж╝рзЗ ржжрж┐ржиред' рж╕ржЩрзНржЧрзЗ рж╕ржЩрзНржЧрзЗ рждрж╛рж░ рж╕рзНрждрзНрж░рзА ржПрж╕рзЗ ржмрж▓рж▓, 'ржЙржарзЛ, рж░рж╛рждрзЗрж░ ржЦрж╛ржмрж╛рж░ ржЦрж╛ржмрзЗ!'",
        bn: "ржПржХ рж▓рзЛржХрзЗрж░ ржЦрзБржм ржШрзБржо ржкрж╛ржЪрзНржЫрж┐рж▓ред рж╕рзЗ ржмрж┐ржЫрж╛ржирж╛ржпрж╝ рж╢рзБржпрж╝рзЗ ржмрж▓рж▓, 'рж╣рзЗ ржЖрж▓рзНрж▓рж╛рж╣, ржЖржорж╛ржХрзЗ ржШрзБржо ржкрж╛ржбрж╝рж┐ржпрж╝рзЗ ржжрж┐ржиред' рж╕ржЩрзНржЧрзЗ рж╕ржЩрзНржЧрзЗ рждрж╛рж░ рж╕рзНрждрзНрж░рзА ржПрж╕рзЗ ржмрж▓рж▓, 'ржЙржарзЛ, рж░рж╛рждрзЗрж░ ржЦрж╛ржмрж╛рж░ ржЦрж╛ржмрзЗ!'"
      },
      {
        en: "ржПржХржЬржи рж▓рзЛржХ рждрж╛рж░ ржмржирзНржзрзБржХрзЗ ржмрж▓рж▓, 'ржЖржорж╛рж░ рж╕рзНрждрзНрж░рзА ржЖржорж╛ржХрзЗ ржмрж▓рзЗржЫрзЗ рж╕рзЗ ржЖржорж╛рж░ ржЬржирзНржп ржЖржХрж╛рж╢ ржерзЗржХрзЗ рждрж╛рж░рж╛ ржЦрзБрж▓рзЗ ржЖржиржмрзЗред' ржмржирзНржзрзБ ржмрж▓рж▓, 'рж╕рзЗ ржХрж┐ ржЬрзНржпрзЛрждрж┐рж╖рзА?' рж▓рзЛржХржЯрж┐ ржмрж▓рж▓, 'ржирж╛, рж╕рзЗ ржЖржорж╛рж░ рж╕ржм рж╕ржЮрзНржЪржпрж╝ ржирж┐ржпрж╝рзЗ ржкрж╛рж▓рж┐ржпрж╝рзЗржЫрзЗ!'",
        bn: "ржПржХржЬржи рж▓рзЛржХ рждрж╛рж░ ржмржирзНржзрзБржХрзЗ ржмрж▓рж▓, 'ржЖржорж╛рж░ рж╕рзНрждрзНрж░рзА ржЖржорж╛ржХрзЗ ржмрж▓рзЗржЫрзЗ рж╕рзЗ ржЖржорж╛рж░ ржЬржирзНржп ржЖржХрж╛рж╢ ржерзЗржХрзЗ рждрж╛рж░рж╛ ржЦрзБрж▓рзЗ ржЖржиржмрзЗред' ржмржирзНржзрзБ ржмрж▓рж▓, 'рж╕рзЗ ржХрж┐ ржЬрзНржпрзЛрждрж┐рж╖рзА?' рж▓рзЛржХржЯрж┐ ржмрж▓рж▓, 'ржирж╛, рж╕рзЗ ржЖржорж╛рж░ рж╕ржм рж╕ржЮрзНржЪржпрж╝ ржирж┐ржпрж╝рзЗ ржкрж╛рж▓рж┐ржпрж╝рзЗржЫрзЗ!'"
      },
      {
        en: "ржПржХ ржЫрзЗрж▓рзЗ рж╕рзНржХрзБрж▓ ржерзЗржХрзЗ ржлрж┐рж░рзЗ ржмрж╛ржмрж╛ржХрзЗ ржмрж▓рж▓, 'ржмрж╛ржмрж╛, ржЖржЬ ржЖржорж╛ржжрзЗрж░ рж╕рзНржХрзБрж▓рзЗ ржПржХржЯрж╛ ржнрзВржд ржПрж╕рзЗржЫрж┐рж▓!' ржмрж╛ржмрж╛ ржмрж▓рж▓рзЗржи, 'рж╕рждрзНржпрж┐?' ржЫрзЗрж▓рзЗ ржмрж▓рж▓, 'ржирж╛, ржЖржЬ ржЫрж┐рж▓ ржнрзВрждрзЗрж░ ржжрж┐ржи!'",
        bn: "ржПржХ ржЫрзЗрж▓рзЗ рж╕рзНржХрзБрж▓ ржерзЗржХрзЗ ржлрж┐рж░рзЗ ржмрж╛ржмрж╛ржХрзЗ ржмрж▓рж▓, 'ржмрж╛ржмрж╛, ржЖржЬ ржЖржорж╛ржжрзЗрж░ рж╕рзНржХрзБрж▓рзЗ ржПржХржЯрж╛ ржнрзВржд ржПрж╕рзЗржЫрж┐рж▓!' ржмрж╛ржмрж╛ ржмрж▓рж▓рзЗржи, 'рж╕рждрзНржпрж┐?' ржЫрзЗрж▓рзЗ ржмрж▓рж▓, 'ржирж╛, ржЖржЬ ржЫрж┐рж▓ ржнрзВрждрзЗрж░ ржжрж┐ржи!'"
      },
      {
        en: "ржПржХ рж▓рзЛржХ рждрж╛рж░ ржмржирзНржзрзБржХрзЗ ржмрж▓рж▓, 'ржЖржорж╛рж░ рж╕рзНрждрзНрж░рзА ржЖржорж╛ржХрзЗ ржмрж▓рзЗржЫрзЗ рж╕рзЗ ржпржжрж┐ рж╕рзБржирзНржжрж░рзА рж╣ржд, рждрж╛рж╣рж▓рзЗ рж╕рзЗ ржЖржорж╛ржХрзЗ ржЫрзЗржбрж╝рзЗ ржЪрж▓рзЗ ржпрзЗрждред' ржмржирзНржзрзБ ржмрж▓рж▓, 'рждрж╛рж╣рж▓рзЗ рждрзБржорж┐ ржирж┐рж░рж╛ржкржж!' рж▓рзЛржХржЯрж┐ ржмрж▓рж▓, 'ржирж╛, рж╕рзЗ ржХрж╛рж▓ржХрзЗ ржкрзНрж▓рж╛рж╕рзНржЯрж┐ржХ рж╕рж╛рж░рзНржЬрж╛рж░рж┐ ржХрж░рждрзЗ ржпрж╛ржЪрзНржЫрзЗ!'",
        bn: "ржПржХ рж▓рзЛржХ рждрж╛рж░ ржмржирзНржзрзБржХрзЗ ржмрж▓рж▓, 'ржЖржорж╛рж░ рж╕рзНрждрзНрж░рзА ржЖржорж╛ржХрзЗ ржмрж▓рзЗржЫрзЗ рж╕рзЗ ржпржжрж┐ рж╕рзБржирзНржжрж░рзА рж╣ржд, рждрж╛рж╣рж▓рзЗ рж╕рзЗ ржЖржорж╛ржХрзЗ ржЫрзЗржбрж╝рзЗ ржЪрж▓рзЗ ржпрзЗрждред' ржмржирзНржзрзБ ржмрж▓рж▓, 'рждрж╛рж╣рж▓рзЗ рждрзБржорж┐ ржирж┐рж░рж╛ржкржж!' рж▓рзЛржХржЯрж┐ ржмрж▓рж▓, 'ржирж╛, рж╕рзЗ ржХрж╛рж▓ржХрзЗ ржкрзНрж▓рж╛рж╕рзНржЯрж┐ржХ рж╕рж╛рж░рзНржЬрж╛рж░рж┐ ржХрж░рждрзЗ ржпрж╛ржЪрзНржЫрзЗ!'"
      },
      {
        en: "ржПржХ рж▓рзЛржХ ржбрж╛ржХрзНрждрж╛рж░рзЗрж░ ржХрж╛ржЫрзЗ ржЧрж┐ржпрж╝рзЗ ржмрж▓рж▓, 'ржбрж╛ржХрзНрждрж╛рж░ рж╕рж╛рж╣рзЗржм, ржЖржорж┐ ржоржирзЗ ржХрж░рж┐ ржЖржорж┐ ржПржХржЯрж╛ ржорзБрж░ржЧрж┐ред' ржбрж╛ржХрзНрждрж╛рж░ ржмрж▓рж▓рзЗржи, 'ржХржЦржи ржерзЗржХрзЗ?' рж▓рзЛржХржЯрж┐ ржмрж▓рж▓, 'ржЖржорж┐ ржбрж┐ржо ржлрзБржЯрзЗ ржмрзЗрж░ рж╣ржУржпрж╝рж╛рж░ ржкрж░ ржерзЗржХрзЗ!'",
        bn: "ржПржХ рж▓рзЛржХ ржбрж╛ржХрзНрждрж╛рж░рзЗрж░ ржХрж╛ржЫрзЗ ржЧрж┐ржпрж╝рзЗ ржмрж▓рж▓, 'ржбрж╛ржХрзНрждрж╛рж░ рж╕рж╛рж╣рзЗржм, ржЖржорж┐ ржоржирзЗ ржХрж░рж┐ ржЖржорж┐ ржПржХржЯрж╛ ржорзБрж░ржЧрж┐ред' ржбрж╛ржХрзНрждрж╛рж░ ржмрж▓рж▓рзЗржи, 'ржХржЦржи ржерзЗржХрзЗ?' рж▓рзЛржХржЯрж┐ ржмрж▓рж▓, 'ржЖржорж┐ ржбрж┐ржо ржлрзБржЯрзЗ ржмрзЗрж░ рж╣ржУржпрж╝рж╛рж░ ржкрж░ ржерзЗржХрзЗ!'"
      },
      {
        en: "ржПржХ рж▓рзЛржХ рждрж╛рж░ ржмржирзНржзрзБржХрзЗ ржмрж▓рж▓, 'ржЖржорж╛рж░ рж╕рзНрждрзНрж░рзА ржЖржорж╛ржХрзЗ ржмрж▓рзЗржЫрзЗ рж╕рзЗ ржЖржорж╛ржХрзЗ ржЫрзЗржбрж╝рзЗ ржЪрж▓рзЗ ржпрж╛ржмрзЗ ржпржжрж┐ ржЖржорж┐ рж╕рж┐ржЧрж╛рж░рзЗржЯ ржирж╛ ржЫрж╛ржбрж╝рж┐ред' ржмржирзНржзрзБ ржмрж▓рж▓, 'рждрж╛рж╣рж▓рзЗ рждрзЛ ржнрж╛рж▓рзЛ ржЦржмрж░!' рж▓рзЛржХржЯрж┐ ржмрж▓рж▓, 'ржирж╛, рж╕рзЗ ржХрж╛рж▓ржХрзЗ ржЖржорж╛рж░ рж╕ржм рж╕рж┐ржЧрж╛рж░рзЗржЯ ржирж┐ржпрж╝рзЗ ржЪрж▓рзЗ ржЧрзЗржЫрзЗ!'",
        bn: "ржПржХ рж▓рзЛржХ рждрж╛рж░ ржмржирзНржзрзБржХрзЗ ржмрж▓рж▓, 'ржЖржорж╛рж░ рж╕рзНрждрзНрж░рзА ржЖржорж╛ржХрзЗ ржмрж▓рзЗржЫрзЗ рж╕рзЗ ржЖржорж╛ржХрзЗ ржЫрзЗржбрж╝рзЗ ржЪрж▓рзЗ ржпрж╛ржмрзЗ ржпржжрж┐ ржЖржорж┐ рж╕рж┐ржЧрж╛рж░рзЗржЯ ржирж╛ ржЫрж╛ржбрж╝рж┐ред' ржмржирзНржзрзБ ржмрж▓рж▓, 'рждрж╛рж╣рж▓рзЗ рждрзЛ ржнрж╛рж▓рзЛ ржЦржмрж░!' рж▓рзЛржХржЯрж┐ ржмрж▓рж▓, 'ржирж╛, рж╕рзЗ ржХрж╛рж▓ржХрзЗ ржЖржорж╛рж░ рж╕ржм рж╕рж┐ржЧрж╛рж░рзЗржЯ ржирж┐ржпрж╝рзЗ ржЪрж▓рзЗ ржЧрзЗржЫрзЗ!'"
      }
    ],
    professional: [
      {
        en: "Why do programmers prefer dark mode? Because light attracts bugs!",
        bn: "ржкрзНрж░рзЛржЧрзНрж░рж╛ржорж╛рж░рж░рж╛ ржХрзЗржи ржбрж╛рж░рзНржХ ржорзЛржб ржкржЫржирзНржж ржХрж░рзЗ? ржХрж╛рж░ржг ржЖрж▓рзЛ ржкрзЛржХрж╛ ржЖржХрж░рзНрж╖ржг ржХрж░рзЗ!"
      },
      {
        en: "A SQL query walks into a bar, walks up to two tables and asks, 'Can I join you?'",
        bn: "ржПржХржЯрж┐ SQL ржХрзБржпрж╝рзЗрж░рж┐ ржПржХржЯрж┐ ржмрж╛рж░рзЗ ржЧрзЗрж▓, ржжрзБржЗржЯрж┐ ржЯрзЗржмрж┐рж▓рзЗрж░ ржХрж╛ржЫрзЗ ржЧрж┐ржпрж╝рзЗ ржЬрж┐ржЬрзНржЮрзЗрж╕ ржХрж░рж▓, 'ржЖржорж┐ ржХрж┐ ржЖржкржирж╛ржжрзЗрж░ рж╕рж╛ржерзЗ ржпрзЛржЧ ржжрж┐рждрзЗ ржкрж╛рж░рж┐?'"
      },
      {
        en: "Why do Java developers wear glasses? Because they can't C#!",
        bn: "ржЬрж╛ржнрж╛ ржбрзЗржнрзЗрж▓ржкрж╛рж░рж░рж╛ ржХрзЗржи ржЪрж╢ржорж╛ ржкрж░рзЗ? ржХрж╛рж░ржг рждрж╛рж░рж╛ C# ржжрзЗржЦрждрзЗ ржкрж╛ржпрж╝ ржирж╛!"
      },
      {
        en: "Why was the JavaScript developer sad? Because he didn't know how to 'null' his feelings.",
        bn: "ржЬрж╛ржнрж╛рж╕рзНржХрзНрж░рж┐ржкрзНржЯ ржбрзЗржнрзЗрж▓ржкрж╛рж░ ржХрзЗржи ржжрзБржГржЦрж┐ржд ржЫрж┐рж▓? ржХрж╛рж░ржг рж╕рзЗ ржЬрж╛ржиржд ржирж╛ ржХрж┐ржнрж╛ржмрзЗ рждрж╛рж░ ржЕржирзБржнрзВрждрж┐ржЧрзБрж▓рзЛ 'null' ржХрж░рждрзЗ рж╣ржпрж╝ред"
      },
      {
        en: "Why do programmers always mix up Halloween and Christmas? Because Oct 31 == Dec 25!",
        bn: "ржкрзНрж░рзЛржЧрзНрж░рж╛ржорж╛рж░рж░рж╛ ржХрзЗржи рж╣рзНржпрж╛рж▓рзЛржЗржи ржПржмржВ ржХрзНрж░рж┐рж╕ржорж╛рж╕ ржорж┐рж╢рж┐ржпрж╝рзЗ ржлрзЗрж▓рзЗ? ржХрж╛рж░ржг ржЕржХрзНржЯрзЛржмрж░ рзйрзз == ржбрж┐рж╕рзЗржорзНржмрж░ рзирзл!"
      },
      {
        en: "A programmer's wife asks: 'Would you go to the shop and pick up a loaf of bread? And if they have eggs, get a dozen.' The programmer returns with 12 loaves of bread.",
        bn: "ржПржХржЬржи ржкрзНрж░рзЛржЧрзНрж░рж╛ржорж╛рж░рзЗрж░ рж╕рзНрждрзНрж░рзА ржЬрж┐ржЬрзНржЮрзЗрж╕ ржХрж░рж▓: 'рждрзБржорж┐ ржХрж┐ ржжрзЛржХрж╛ржирзЗ ржЧрж┐ржпрж╝рзЗ ржПржХ ржкрж╛ржЙрж░рзБржЯрж┐ ржЖржиржмрзЗ? ржЖрж░ ржпржжрж┐ ржбрж┐ржо ржерж╛ржХрзЗ, рждрж╛рж╣рж▓рзЗ ржПржХ ржбржЬржи ржЖржиржмрзЗред' ржкрзНрж░рзЛржЧрзНрж░рж╛ржорж╛рж░ рззрзи ржкрж╛ржЙрж░рзБржЯрж┐ ржирж┐ржпрж╝рзЗ ржлрж┐рж░рзЗ ржПрж▓ред"
      }
    ],
    dark: [
      {
        en: "I bought some shoes from a drug dealer. I don't know what he laced them with, but I've been tripping all day.",
        bn: "ржЖржорж┐ ржПржХ ржбрзНрж░рж╛ржЧ ржбрж┐рж▓рж╛рж░ ржерзЗржХрзЗ ржЬрзБрждрж╛ ржХрж┐ржирзЗржЫрж┐ред ржЖржорж┐ ржЬрж╛ржирж┐ ржирж╛ рж╕рзЗ ржПрждрзЗ ржХрж┐ ржорж┐рж╢рж┐ржпрж╝рзЗржЫрзЗ, ржХрж┐ржирзНрждрзБ ржЖржорж┐ рж╕рж╛рж░рж╛ржжрж┐ржи ржЯрзНрж░рж┐ржк ржХрж░ржЫрж┐ред"
      },
      {
        en: "My wife told me to stop impersonating a flamingo. I had to put my foot down.",
        bn: "ржЖржорж╛рж░ рж╕рзНрждрзНрж░рзА ржЖржорж╛ржХрзЗ ржлрзНрж▓рзЗржорж┐ржЩрзНржЧрзЛ рж╕рж╛ржЬрж╛ ржмржирзНржз ржХрж░рждрзЗ ржмрж▓рж▓ред ржЖржорж╛ржХрзЗ ржкрж╛ ржирж╛ржорж╛рждрзЗ рж╣ржпрж╝рзЗржЫрж┐рж▓ред"
      },
      {
        en: "I was addicted to the hokey pokey, but I turned myself around.",
        bn: "ржЖржорж┐ рж╣рзЛржХрж┐ ржкрзЛржХрж┐рждрзЗ ржЖрж╕ржХрзНржд ржЫрж┐рж▓рж╛ржо, ржХрж┐ржирзНрждрзБ ржЖржорж┐ ржирж┐ржЬрзЗржХрзЗ ржШрзБрж░рж┐ржпрж╝рзЗ ржирж┐ржпрж╝рзЗржЫрж┐ред"
      },
      {
        en: "I was wondering why the frisbee was getting bigger, then it hit me.",
        bn: "ржЖржорж┐ ржнрж╛ржмржЫрж┐рж▓рж╛ржо ржлрзНрж░рж┐рж╕ржмрж┐ ржХрзЗржи ржмржбрж╝ рж╣ржЪрзНржЫрзЗ, рждрж╛рж░ржкрж░ ржПржЯрж┐ ржЖржорж╛ржХрзЗ ржЖржШрж╛ржд ржХрж░рж▓ред"
      }
    ],
    animal: [
      {
        en: "What do you call a fish with no eyes? Fsh!",
        bn: "ржЪрзЛржЦрж╣рзАржи ржорж╛ржЫржХрзЗ ржХрзА ржмрж▓рзЗ? ржлрзНрж╢!"
      },
      {
        en: "Why don't elephants use computers? They're afraid of the mouse!",
        bn: "рж╣рж╛рждрж┐рж░рж╛ ржХрзЗржи ржХржорзНржкрж┐ржЙржЯрж╛рж░ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржирж╛? рждрж╛рж░рж╛ ржорж╛ржЙрж╕ржХрзЗ ржнржпрж╝ ржкрж╛ржпрж╝!"
      },
      {
        en: "What do you get when you cross a snowman and a dog? Frostbite!",
        bn: "рж╕рзНржирзЛржорзНржпрж╛ржи ржПржмржВ ржХрзБржХрзБрж░рзЗрж░ ржХрзНрж░рж╕ ржХрж░рж▓рзЗ ржХрзА ржкрж╛ржУржпрж╝рж╛ ржпрж╛ржпрж╝? ржлрзНрж░рж╕рзНржЯржмрж╛ржЗржЯ!"
      },
      {
        en: "Why did the cow jump over the moon? Because the farmer had cold hands!",
        bn: "ржЧрж░рзБ ржХрзЗржи ржЪрж╛ржБржжрзЗрж░ ржЙржкрж░ ржжрж┐ржпрж╝рзЗ рж▓рж╛ржлрж╛рж▓? ржХрж╛рж░ржг ржХрзГрж╖ржХрзЗрж░ рж╣рж╛ржд ржарж╛ржирзНржбрж╛ ржЫрж┐рж▓!"
      }
    ],
    school: [
      {
        en: "Why did the student eat his homework? Because the teacher said it was a piece of cake!",
        bn: "ржЫрж╛рждрзНрж░ ржХрзЗржи рждрж╛рж░ рж╣рзЛржоржУржпрж╝рж╛рж░рзНржХ ржЦрзЗржпрж╝рзЗ ржлрзЗрж▓рж▓? ржХрж╛рж░ржг рж╢рж┐ржХрзНрж╖ржХ ржмрж▓рзЗржЫрж┐рж▓рзЗржи ржПржЯрж┐ ржПржХржЯрж┐ ржкрж┐рж╕ ржЕржл ржХрзЗржХ!"
      },
      {
        en: "Teacher: If I gave you 2 cats and another 2 cats and another 2, how many would you have? Student: Seven. Teacher: No, listen carefully... Student: But I already have one cat at home!",
        bn: "рж╢рж┐ржХрзНрж╖ржХ: ржпржжрж┐ ржЖржорж┐ рждрзЛржорж╛ржХрзЗ рзиржЯрж┐ ржмрж┐ржбрж╝рж╛рж▓ ржПржмржВ ржЖрж░ржУ рзиржЯрж┐ ржмрж┐ржбрж╝рж╛рж▓ ржПржмржВ ржЖрж░ржУ рзиржЯрж┐ ржжрж┐ржЗ, рждрж╛рж╣рж▓рзЗ рждрзЛржорж╛рж░ ржХрждржЯрж┐ рж╣ржмрзЗ? ржЫрж╛рждрзНрж░: рж╕рж╛рждржЯрж┐ред рж╢рж┐ржХрзНрж╖ржХ: ржирж╛, ржоржирзЛржпрзЛржЧ ржжрж┐ржпрж╝рзЗ рж╢рзЛржи... ржЫрж╛рждрзНрж░: ржХрж┐ржирзНрждрзБ ржЖржорж╛рж░ ржмрж╛ржбрж╝рж┐рждрзЗ ржЗрждрж┐ржоржзрзНржпрзЗржЗ ржПржХржЯрж┐ ржмрж┐ржбрж╝рж╛рж▓ ржЖржЫрзЗ!"
      },
      {
        en: "Why was the math book sad? It had too many problems.",
        bn: "ржЧржгрж┐рждрзЗрж░ ржмржЗ ржХрзЗржи ржжрзБржГржЦрж┐ржд ржЫрж┐рж▓? ржПрждрзЗ ржЕржирзЗржХ рж╕ржорж╕рзНржпрж╛ ржЫрж┐рж▓ред"
      },
      {
        en: "Teacher: Why are you late? Student: There was a man who lost a hundred dollar bill. Teacher: That's nice. Were you helping him look for it? Student: No. I was standing on it.",
        bn: "рж╢рж┐ржХрзНрж╖ржХ: рждрзБржорж┐ ржХрзЗржи ржжрзЗрж░рж┐ ржХрж░рж▓рзЗ? ржЫрж╛рждрзНрж░: ржПржХржЬржи рж▓рзЛржХ ржПржХрж╢ ржбрж▓рж╛рж░ рж╣рж╛рж░рж┐ржпрж╝рзЗржЫрж┐рж▓ред рж╢рж┐ржХрзНрж╖ржХ: ржПржЯрж╛ ржнрж╛рж▓рзЛред рждрзБржорж┐ ржХрж┐ рждрж╛ржХрзЗ ржЦрзБржБржЬрждрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░ржЫрж┐рж▓рзЗ? ржЫрж╛рждрзНрж░: ржирж╛ред ржЖржорж┐ рждрж╛рж░ ржЙржкрж░ ржжрж╛ржБржбрж╝рж┐ржпрж╝рзЗ ржЫрж┐рж▓рж╛ржоред"
      }
    ],
    ai: [
      {
        en: "Why did the AI go to therapy? It had too many deep learning issues!",
        bn: "ржПржЖржЗ ржХрзЗржи ржерзЗрж░рж╛ржкрж┐рждрзЗ ржЧрзЗрж▓? ржПрж░ ржЕржирзЗржХ ржЧржнрзАрж░ рж╢рзЗржЦрж╛рж░ рж╕ржорж╕рзНржпрж╛ ржЫрж┐рж▓!"
      },
      {
        en: "Why was the AI bad at relationships? It kept trying to optimize love!",
        bn: "ржПржЖржЗ ржХрзЗржи рж╕ржорзНржкрж░рзНржХрзЗ ржЦрж╛рж░рж╛ржк ржЫрж┐рж▓? ржПржЯрж┐ ржнрж╛рж▓рзЛржмрж╛рж╕рж╛ржХрзЗ ржЕржкрзНржЯрж┐ржорж╛ржЗржЬ ржХрж░рж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░ржЫрж┐рж▓!"
      },
      {
        en: "What do you call an AI that tells jokes? A stand-up algorithm!",
        bn: "ржпрзЗ ржПржЖржЗ ржЬрзЛржХрж╕ ржмрж▓рзЗ рждрж╛ржХрзЗ ржХрзА ржмрж▓рзЗ? рж╕рзНржЯрзНржпрж╛ржирзНржб-ржЖржк ржЕрзНржпрж╛рж▓ржЧрж░рж┐ржжржо!"
      },
      {
        en: "Why did the AI break up with the robot? There was no physical attraction!",
        bn: "ржПржЖржЗ ржХрзЗржи рж░рзЛржмржЯрзЗрж░ рж╕рж╛ржерзЗ рж╕ржорзНржкрж░рзНржХ ржЫрж┐ржирзНржи ржХрж░рж▓? ржХрзЛржи рж╢рж╛рж░рзАрж░рж┐ржХ ржЖржХрж░рзНрж╖ржг ржЫрж┐рж▓ ржирж╛!"
      }
    ]
  };

  const generateRandomJoke = () => {
    const sectionJokes = jokes[activeSection as keyof typeof jokes];
    const randomIndex = Math.floor(Math.random() * sectionJokes.length);
    setCurrentJoke(randomIndex);
  };

  const copyJoke = () => {
    const joke = jokes[activeSection as keyof typeof jokes][currentJoke];
    navigator.clipboard.writeText(joke[language]);
    alert(language === 'bn' ? 'ржЬрзЛржХ ржХржкрж┐ ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗ!' : 'Joke copied!');
  };

  const shareJoke = () => {
    const joke = jokes[activeSection as keyof typeof jokes][currentJoke];
    if (navigator.share) {
      navigator.share({
        title: language === 'bn' ? 'ржоржЬрж╛рж░ ржЬрзЛржХ!' : 'Funny Joke!',
        text: joke[language],
        url: window.location.href
      }).catch(err => {
        console.log('Error sharing:', err);
      });
    } else {
      copyJoke();
      alert(language === 'bn' ? 'ржЬрзЛржХ ржХржкрж┐ ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗ, ржПржЦржи рж╢рзЗржпрж╝рж╛рж░ ржХрж░рзБржи!' : 'Joke copied, now share it!');
    }
  };

  const toggleLike = () => {
    const newLikedJokes = { ...likedJokes };
    const sectionLikes = new Set(newLikedJokes[activeSection as keyof typeof jokes]);
    
    if (sectionLikes.has(currentJoke)) {
      sectionLikes.delete(currentJoke);
    } else {
      sectionLikes.add(currentJoke);
    }
    
    newLikedJokes[activeSection as keyof typeof jokes] = sectionLikes;
    setLikedJokes(newLikedJokes);
  };

  const nextJoke = () => {
    const sectionJokes = jokes[activeSection as keyof typeof jokes];
    setCurrentJoke((prev) => (prev + 1) % sectionJokes.length);
  };

  const prevJoke = () => {
    const sectionJokes = jokes[activeSection as keyof typeof jokes];
    setCurrentJoke((prev) => (prev - 1 + sectionJokes.length) % sectionJokes.length);
  };

  const isLiked = likedJokes[activeSection as keyof typeof jokes].has(currentJoke);

  return (
    <div className="min-h-screen bg-gradient-to-br from-yellow-50 via-orange-50 to-red-50 py-8">
      <div className="container mx-auto px-4">
        {/* Header */}
        <div className="text-center mb-12">
          <h1 className="text-4xl md:text-5xl font-bold mb-4 bg-gradient-to-r from-yellow-600 to-red-600 bg-clip-text text-transparent">
            {language === 'bn' ? 'ЁЯШВ ржЬрзЛржХ ржЬрзЛржи' : 'ЁЯШВ Joke Zone'}
          </h1>
          <p className="text-xl text-gray-600 max-w-2xl mx-auto">
            {language === 'bn' 
              ? 'рж╣рж╛рж╕рж┐рж░ ржЧрж▓рзНржк, ржЬрзЛржХрж╕ ржЖрж░ ржоржЬрж╛рж░ ржХржерж╛ - рж╕ржмрж╛рж░ ржЬржирзНржп!' 
              : 'Funny stories, jokes and hilarious content for everyone!'
            }
          </p>
        </div>

        {/* Section Tabs */}
        <div className="flex flex-wrap justify-center gap-4 mb-8">
          {jokeSections.map((section) => (
            <button
              key={section.id}
              onClick={() => {
                setActiveSection(section.id);
                setCurrentJoke(0);
              }}
              className={`flex items-center space-x-2 px-6 py-3 rounded-full font-semibold transition-all duration-200 transform hover:scale-105 ${
                activeSection === section.id
                  ? `${section.color} text-white shadow-lg`
                  : 'bg-white text-gray-700 hover:bg-gray-50 shadow-md'
              }`}
            >
              <span className="text-xl">{section.icon}</span>
              <span>{section.name}</span>
            </button>
          ))}
        </div>

        {/* Joke Display */}
        <div className="max-w-4xl mx-auto">
          <div className="bg-white rounded-2xl shadow-xl p-8 md:p-12 mb-8 relative">
            <div className="text-center">
              <div className="text-6xl mb-6">ЁЯШД</div>
              <div className="text-xl md:text-2xl text-gray-700 leading-relaxed mb-8 min-h-32">
                {jokes[activeSection as keyof typeof jokes][currentJoke][language]}
              </div>
              
              {/* Navigation Arrows */}
              <div className="absolute top-1/2 left-4 transform -translate-y-1/2">
                <button
                  onClick={prevJoke}
                  className="p-2 rounded-full bg-gray-100 hover:bg-gray-200 transition-colors duration-200"
                >
                  <ChevronLeft size={24} />
                </button>
              </div>
              <div className="absolute top-1/2 right-4 transform -translate-y-1/2">
                <button
                  onClick={nextJoke}
                  className="p-2 rounded-full bg-gray-100 hover:bg-gray-200 transition-colors duration-200"
                >
                  <ChevronRight size={24} />
                </button>
              </div>
              
              {/* Action Buttons */}
              <div className="flex flex-wrap justify-center gap-4">
                <button
                  onClick={generateRandomJoke}
                  className="flex items-center space-x-2 bg-gradient-to-r from-blue-500 to-purple-600 text-white px-6 py-3 rounded-full font-semibold hover:from-blue-600 hover:to-purple-700 transition-all duration-200 transform hover:scale-105"
                >
                  <Shuffle size={20} />
                  <span>{language === 'bn' ? 'ржирждрзБржи ржЬрзЛржХ' : 'New Joke'}</span>
                </button>
                
                <button
                  onClick={copyJoke}
                  className="flex items-center space-x-2 bg-gradient-to-r from-green-500 to-teal-600 text-white px-6 py-3 rounded-full font-semibold hover:from-green-600 hover:to-teal-700 transition-all duration-200 transform hover:scale-105"
                >
                  <Copy size={20} />
                  <span>{language === 'bn' ? 'ржХржкрж┐' : 'Copy'}</span>
                </button>
                
                <button
                  onClick={toggleLike}
                  className={`flex items-center space-x-2 bg-gradient-to-r from-pink-500 to-red-600 text-white px-6 py-3 rounded-full font-semibold hover:from-pink-600 hover:to-red-700 transition-all duration-200 transform hover:scale-105 ${
                    isLiked ? 'ring-2 ring-pink-300' : ''
                  }`}
                >
                  <Heart size={20} fill={isLiked ? 'white' : 'none'} />
                  <span>{language === 'bn' ? 'рж▓рж╛ржЗржХ' : 'Like'}</span>
                </button>
                
                <button
                  onClick={shareJoke}
                  className="flex items-center space-x-2 bg-gradient-to-r from-indigo-500 to-blue-600 text-white px-6 py-3 rounded-full font-semibold hover:from-indigo-600 hover:to-blue-700 transition-all duration-200 transform hover:scale-105"
                >
                  <Share2 size={20} />
                  <span>{language === 'bn' ? 'рж╢рзЗржпрж╝рж╛рж░' : 'Share'}</span>
                </button>
              </div>
            </div>
          </div>

          {/* Joke Grid */}
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {jokes[activeSection as keyof typeof jokes].map((joke, index) => (
              <div
                key={index}
                onClick={() => setCurrentJoke(index)}
                className={`bg-white rounded-xl shadow-lg p-6 cursor-pointer transition-all duration-200 transform hover:scale-105 hover:shadow-xl ${
                  currentJoke === index ? 'ring-2 ring-blue-500 bg-blue-50' : ''
                }`}
              >
                <div className="text-3xl mb-3">ЁЯШК</div>
                <p className="text-gray-700 text-sm line-clamp-3">
                  {joke[language]}
                </p>
                <div className="mt-4 flex justify-between items-center">
                  <span className="text-xs text-gray-500">
                    {language === 'bn' ? 'ржЬрзЛржХ #' : 'Joke #'}{index + 1}
                  </span>
                  <div className="flex space-x-1">
                    <button 
                      onClick={(e) => {
                        e.stopPropagation();
                        const newLikedJokes = { ...likedJokes };
                        const sectionLikes = new Set(newLikedJokes[activeSection as keyof typeof jokes]);
                        
                        if (sectionLikes.has(index)) {
                          sectionLikes.delete(index);
                        } else {
                          sectionLikes.add(index);
                        }
                        
                        newLikedJokes[activeSection as keyof typeof jokes] = sectionLikes;
                        setLikedJokes(newLikedJokes);
                      }}
                      className="text-red-500 hover:text-red-600"
                    >
                      <Heart 
                        size={16} 
                        fill={likedJokes[activeSection as keyof typeof jokes].has(index) ? 'currentColor' : 'none'}
                      />
                    </button>
                    <button 
                      onClick={(e) => {
                        e.stopPropagation();
                        navigator.clipboard.writeText(joke[language]);
                        alert(language === 'bn' ? 'ржЬрзЛржХ ржХржкрж┐ ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗ!' : 'Joke copied!');
                      }}
                      className="text-blue-500 hover:text-blue-600"
                    >
                      <Copy size={16} />
                    </button>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  );
};

export default JokeZone;